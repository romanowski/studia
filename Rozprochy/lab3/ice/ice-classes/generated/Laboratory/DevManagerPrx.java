// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `DevManagerPrx.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Laboratory;

public interface DevManagerPrx extends Ice.ObjectPrx
{
    public DevS[] getDevsInfo();

    public DevS[] getDevsInfo(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDevsInfo();

    public Ice.AsyncResult begin_getDevsInfo(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getDevsInfo(Ice.Callback __cb);

    public Ice.AsyncResult begin_getDevsInfo(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getDevsInfo(Callback_DevManager_getDevsInfo __cb);

    public Ice.AsyncResult begin_getDevsInfo(java.util.Map<String, String> __ctx, Callback_DevManager_getDevsInfo __cb);

    public DevS[] end_getDevsInfo(Ice.AsyncResult __result);

    public DevS viewDev(String ID);

    public DevS viewDev(String ID, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_viewDev(String ID);

    public Ice.AsyncResult begin_viewDev(String ID, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_viewDev(String ID, Ice.Callback __cb);

    public Ice.AsyncResult begin_viewDev(String ID, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_viewDev(String ID, Callback_DevManager_viewDev __cb);

    public Ice.AsyncResult begin_viewDev(String ID, java.util.Map<String, String> __ctx, Callback_DevManager_viewDev __cb);

    public DevS end_viewDev(Ice.AsyncResult __result);

    public String connect()
        throws ApplicationException;

    public String connect(java.util.Map<String, String> __ctx)
        throws ApplicationException;

    public Ice.AsyncResult begin_connect();

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_connect(Ice.Callback __cb);

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_connect(Callback_DevManager_connect __cb);

    public Ice.AsyncResult begin_connect(java.util.Map<String, String> __ctx, Callback_DevManager_connect __cb);

    public String end_connect(Ice.AsyncResult __result)
        throws ApplicationException;

    public DevPrx reserveDev(String ID, String accessToken)
        throws ApplicationException;

    public DevPrx reserveDev(String ID, String accessToken, java.util.Map<String, String> __ctx)
        throws ApplicationException;

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken);

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken, Ice.Callback __cb);

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken, Callback_DevManager_reserveDev __cb);

    public Ice.AsyncResult begin_reserveDev(String ID, String accessToken, java.util.Map<String, String> __ctx, Callback_DevManager_reserveDev __cb);

    public DevPrx end_reserveDev(Ice.AsyncResult __result)
        throws ApplicationException;

    public void relaseDev(String ID, String accessToken)
        throws ApplicationException;

    public void relaseDev(String ID, String accessToken, java.util.Map<String, String> __ctx)
        throws ApplicationException;

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken);

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken, Ice.Callback __cb);

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken, Callback_DevManager_relaseDev __cb);

    public Ice.AsyncResult begin_relaseDev(String ID, String accessToken, java.util.Map<String, String> __ctx, Callback_DevManager_relaseDev __cb);

    public void end_relaseDev(Ice.AsyncResult __result)
        throws ApplicationException;

    public void disconnect(String accessToken)
        throws ApplicationException;

    public void disconnect(String accessToken, java.util.Map<String, String> __ctx)
        throws ApplicationException;

    public Ice.AsyncResult begin_disconnect(String accessToken);

    public Ice.AsyncResult begin_disconnect(String accessToken, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_disconnect(String accessToken, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnect(String accessToken, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_disconnect(String accessToken, Callback_DevManager_disconnect __cb);

    public Ice.AsyncResult begin_disconnect(String accessToken, java.util.Map<String, String> __ctx, Callback_DevManager_disconnect __cb);

    public void end_disconnect(Ice.AsyncResult __result)
        throws ApplicationException;

    public StatePrx devState(String ID);

    public StatePrx devState(String ID, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_devState(String ID);

    public Ice.AsyncResult begin_devState(String ID, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_devState(String ID, Ice.Callback __cb);

    public Ice.AsyncResult begin_devState(String ID, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_devState(String ID, Callback_DevManager_devState __cb);

    public Ice.AsyncResult begin_devState(String ID, java.util.Map<String, String> __ctx, Callback_DevManager_devState __cb);

    public StatePrx end_devState(Ice.AsyncResult __result);
}
