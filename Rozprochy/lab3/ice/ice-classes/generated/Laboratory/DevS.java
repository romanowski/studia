// **********************************************************************
//
// Copyright (c) 2003-2011 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.4.2
//
// <auto-generated>
//
// Generated from file `DevS.java'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Laboratory;

public class DevS implements java.lang.Cloneable, java.io.Serializable
{
    public String ID;

    public String devType;

    public DevS()
    {
    }

    public DevS(String ID, String devType)
    {
        this.ID = ID;
        this.devType = devType;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        DevS _r = null;
        try
        {
            _r = (DevS)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(ID != _r.ID)
            {
                if(ID == null || _r.ID == null || !ID.equals(_r.ID))
                {
                    return false;
                }
            }
            if(devType != _r.devType)
            {
                if(devType == null || _r.devType == null || !devType.equals(_r.devType))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(ID != null)
        {
            __h = 5 * __h + ID.hashCode();
        }
        if(devType != null)
        {
            __h = 5 * __h + devType.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(ID);
        __os.writeString(devType);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        ID = __is.readString();
        devType = __is.readString();
    }
}
